#!/usr/bin/env python
'''
{{api['title']}}
'''
import aiohttp
import asyncio
import logging

log = logging.getLogger(__name__)


class {{service_name}}:
    '''
    {{api['title']}}
    {{api['description'] | docstring}}
    '''

    baseUrl = '{{api['baseUrl'] | string}}'
    version = {{api['version']}}
    referenceUrl = '{{reference_url}}'

    def __init__(self):
        self.session = aiohttp.ClientSession()
{{''}}
{%- for entry in api['entries'] %}
{#- check if entry has type == 'function' #}
    @asyncio.coroutine
    def {{entry['name']}}({{argumentstring(entry)}}):
        '''
        {{entry['title']}}

        {{entry['description'] | docstring(8)}}
        '''
        method = '{{entry['method']}}'
        {#- TODO: Check that <vars> are present in entry['args'] #}
        url = '{baseUrl}{{entry['route'] | angles_to_braces}}'.format(
            baseUrl=self.baseUrl,
            {%- for a in entry['args'] %}
            {{a}}={{a}},
            {%- endfor %}
        )

        # TODO: Add auth headers
        # TODO: Add payload when appropriate
        resp = yield from self.session.request(method, url)
        return resp
{% endfor %}

# Generated by me! Don't edit this file!
